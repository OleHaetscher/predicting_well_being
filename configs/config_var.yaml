general:
  datasets_to_be_included: [ cocoesm, cocoms, cocout, emotions, pia, zpid ] # cocoesm, cocoms, cocout, emotions, pia, zpid
  log_dir: "../logs/0912"  # only for preprocessing, analysis logs are stored in the result folders
  log_name: 0912

  steps:
    preprocessing: false
    analysis: false
    postprocessing: true

preprocessing:
  path_to_raw_data: "../data/raw"
  store_data: false  # stores the full preprocessed df
  path_to_preprocessed_data: "../data/preprocessed"
  min_num_esm_measures: 5  # 5
  nrows: 999999 # only for descriptives
  need_inverse_coding: ["cocout", "emotions", "pia", "zpid", "cocoms"]  # all except cocoesm, do not change

  esm_id_col:
    cocoesm: participant
    cocoms: original_id
    cocout: id
    emotions: id
    pia: id
    zpid: user_id

  esm_timestamp_col:
    emotions: created_esm
    zpid: questionnaireStartedTimestamp_corrected
    cocout: StartDateConvert_esm
    pia: created
    cocoesm: created_individual_esm
    cocoms: questionnaireStartedTimestamp

  years_of_data_collection:
    cocoesm: [ 2021, 2022]
    cocoms: [ 2022, 2023]
    zpid: [ 2020 ]
    emotions: [ 2020 ]
    cocout: [ 2020, 2021 ]
    pia: [ 2021 ]

  sensing:
    app_substring:
      cocoms: "App_"
      zpid: "app_"
    call_substring:
      cocoms: "Call_totalDur"
      zpid: "phone_sum_dur_calls"
    call_reference:
      cocoms: "Screen_totalDur_unlocked"
      zpid: "screen_sum_dur_session"

  sanity_checking:
    sensing:
      nan_col_thresh: 0.15
      zero_col_thresh: 0.30

    nan_thresh: 0.3 # 30% NaNs -> warn
    cron_alpha_thresh: 0.6
    expected_pos_corrs:
    - self_esteem
    - social_status
    - trust_government
    - education_level
    - state_pa
    - trait_pa
    - trait_na
    - sleep_quality_mean
    - number_interactions_mean
    - gdp_capita
    - state_wb
    - creative_imagination
    - productiveness
    - responsibility

analysis:
  load_data: true
  path_to_preprocessed_data: "../data/preprocessed"
  random_state: 42

  # In the final version, we do not use mpi4py and always use split_reps!!!
  use_mpi4py: false  # Change Backend to LOKY, if FALSE
  split_reps: true  # this makes only sense if use_mpi4py is False
  store_pred_and_true: true

  tests:
    sample: false
    sample_size: 200

  methods_to_apply:
    - select_samples
    - select_features
    - select_criterion
    - initial_info_log
    - drop_zero_variance_cols
    - create_pipeline
    - repeated_nested_cv
    - get_average_coefficients
    - process_all_shap_ia_values
    - store_analysis_results  # CAUTION

  feature_combinations:
    - pl
    - srmc
    - sens
    - mac

# for each combination, we will also use all samples and always compare it against the same samples using only pl
  feature_sample_combinations:
    # 1
    pl: [emotions, cocout, cocoesm, cocoms]
    srmc: [emotions, cocout, cocoesm, cocoms]
    sens: [zpid, cocoms]
    mac: [cocoesm]
    # 2  filter for "pl_" for comparisons
    pl_srmc: [emotions, cocout, cocoesm, cocoms]
    pl_sens: [zpid, cocoms]
    pl_srmc_sens: [cocoms]
    pl_mac: [cocoesm]
    # 3
    pl_srmc_mac: [cocoesm]
    # 4 all_in
    all_in: [cocoesm, cocout, cocoms, emotions, pia, zpid]

    #### Additional analysis ####
    # control analyses for pl_srmc_sens results
    pl_srmc_control: [cocoms] # only persons with sensing data
    srmc_control: [cocoms] # only persons with sensing data

    # control analysis without neuroticism and self-esteem
    # 1
    pl_nnse: [emotions, cocout, cocoesm, cocoms]
    # 2  filter for "pl_" for comparisons
    pl_srmc_nnse: [ emotions, cocout, cocoesm, cocoms ]
    pl_sens_nnse: [ zpid, cocoms ]
    pl_srmc_sens_nnse: [ cocoms ]
    pl_mac_nnse: [ cocoesm ]
    # 3
    pl_srmc_mac_nnse: [ cocoesm ]
    # 4 all_in
    all_in_nnse: [ cocoesm, cocout, cocoms, emotions, pia, zpid ]

    # Sensing with feature selection
    sens_fs: [zpid, cocoms]
    pl_sens_fs: [zpid, cocoms]
    pl_srmc_sens_fs: [ cocoms ]
    all_in_fs: [cocoesm, cocout, cocoms, emotions, pia, zpid]

  no_control_lst: ["pl", "srmc", "sens", "mac", "all_in"] # we do not run control analyses for these combinations

  params: # adjusted by SLURM
    prediction_model: elasticnet  # elasticnet, randomforestregressor
    crit: wb_state  # wb_state, wb_trait, etc
    feature_combination: sens_fs # pl, srmc, sens, mac, pl_srmc, pl_sens, pl_srmc_sens, pl_mac, pl_srmc_mac, all_in
    samples_to_include: all  # all, selected, control

  cv:
    num_inner_cv: 10  # 10
    verbose_inner_cv: 0
    num_outer_cv: 10 # 10
    num_reps: 10  # 10
    id_grouping_col: other_unique_id
    cache_pipe: false  # not improving performance
    warm_start: false  # not improving performance

  feature_selection:
    num_sensing_features: 21  # as number of srmc features

  crit_available: # not all criteria are available for all samples
    wb_state: [ cocoesm, cocout, cocoms, emotions, pia, zpid ]
    pa_state: [ cocoesm, cocout, cocoms, emotions, pia ]
    na_state: [ cocoesm, cocout, cocoms, emotions, pia ]
    wb_trait: [ cocoesm, cocout, cocoms, pia, zpid ]
    pa_trait: [ cocoesm, cocout, cocoms, pia, zpid ]
    na_trait: [ cocoesm, cocout, cocoms, pia, zpid ]

  imputation:
    num_imputations: 5 # 5
    max_iter: 1 # 40
    conv_thresh: 0.05  # 0.05  only RFR
    tree_max_depth: 10  # only RFR
    percentage_of_features: 0.5  # only ENR
    n_features_thresh: 50  # only ENR
    sample_posterior: False  # only ENR, use PMM instead
    pmm_k: 5  # number of neighbors to consider for PMM
    country_grouping_col: "other_country"
    years_col: "other_years_of_participation"

  scoring_metric:
    inner_cv_loop:
      name: neg_mean_squared_error
    outer_cv_loop: # only for evaluation in the outer loop, not for fitting, all tested
      - r2
      - neg_mean_squared_error
      - spearman
      - pearson

  model_hyperparameters:
    elasticnet:  # verify
      #model__regressor__alpha: [0.1, 1]
      #model__regressor__l1_ratio: [0.5]
      model__regressor__alpha: [0.00001, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000, 100000]
      model__regressor__l1_ratio: [0, 0.1, 0.2, 0.3, 0.4, 0.4, 0.6, 0.7, 0.8, 0.9, 1]
      model__regressor__max_iter: [ 1000, 10000 ]
      model__regressor__tol: [0.1, 0.01, 0.001, 0.0001]
    randomforestregressor:
      #model__regressor__max_depth: [ 4, 6 ]
      #model__regressor__max_features: [ 0.2 ]
      model__regressor__n_estimators: [ 100, 500 ]
      model__regressor__max_features: [ 0.25, 0.5, 0.75]
      model__regressor__max_depth: [4, 6, 8, 10, 12]
      model__regressor__min_samples_split: [5, 10, 15, 20]

  parallelize:
    parallelize_shap: true
    shap_n_jobs: 1
    parallelize_inner_cv: true
    inner_cv_n_jobs: 1
    parallelize_shap_ia_values: true
    shap_ia_values_n_jobs: 1
    parallelize_imputation_runs: true # Cannot parallelize columns
    imputation_runs_n_jobs: 1
    joblib_backend: "loky"  # threading; for pc2, use threading, loky may crash in multi-node settings

  shap_ia_values:
    comp_shap_ia_values: false # true
    interaction_index: "k-SII"
    min_order: 0  # 0; min interaction order, always choose 0
    max_order: 2  # 3; max interaction order, one correspond to the normal SHAP values
    num_samples: 100  # 100

  output_path: "../results/local_tests"

  output_filenames:
    performance: 'cv_results'  # .json
    shap_values: 'shap_values'  # .pkl
    shap_ia_values_for_local: 'shap_ia_values_for_local' #.pkl
    shap_ia_values_for_cluster: 'shap_ia_values_for_cluster' #.pkl
    lin_model_coefs: 'lin_model_coefficients' # .pkl

postprocessing:
  methods:
    #- sanity_check_pred_vs_true

    - condense_cv_results
    #- condense_lin_model_coefs
    #- create_descriptives
    #- conduct_significance_tests
    - create_cv_results_plots
    #- create_shap_plots

  # "../results/results_merged_onlycv"
  # raw_results_path: "../results/cluster_results_merged_2611"  # BASE RESULT DIR FOR RAW RESULTS  # shap or cv test_fs_shap

  # We do merging on the cluster, thus, we are currently only using the processed_results_path
  processed_results_path: "../results/run_1312"
  shap_ia_values_path: "../results/ia_values_0912"

  summarized_file_names:
    cv_results: "cv_results_summary.json"
    lin_model_coefs: "lin_model_coefs_summary.json"
    shap_values: "shap_values_summary.pkl"
    shap_ia_values: "shap_ia_values_summary.pkl"

  cv_results:
    table_feature_combo_order:
      - pl
      - pl_nnse
      - srmc
      - sens
      - mac
      - pl_srmc
      - pl_srmc_nnse
      - pl_sens
      - pl_sens_nnse
      - pl_srmc_sens
      - pl_srmc_sens_nnse
      - srmc_control
      - pl_srmc_control
      - pl_mac
      - pl_mac_nnse
      - pl_srmc_mac
      - pl_srmc_mac_nnse
      - all_in
      - all_in_nnse

  descriptives:
    base_path: "../results/descriptives"
    store: true
    cont_agg_dct: {mean: M, std: SD}
    bin_agg_lst: ["%"]
    wb_items:
      state_order:
        - Enthusiastic
        - Excited
        - Happy
        - Relaxed
        - Valence
        - Angry
        - Anxious
        - Sad
        - Worried
      trait_order:
        - Enthusiastic
        - Excited
        - Happy
        - Relaxed
        - Valence
        - Angry
        - Anxious
        - Sad
        - Worried


  check_pred_vs_true:
    path: "../results/mac_pred_true/"
    reps_to_check: [0, 1]  # attention, may overshoot memory
    store: true

  metrics:
    - spearman
    - r2
    - pearson

  significance_tests:
    base_result_path: "../results/sig_tests_1312"  # this contains only the results necessary for testing
    alpha: 0.05 # .05
    metric: r2 # r2
    crit: wb_state  # do this only for wb_state
    store: true
    stat_order_compare_models: ["elasticnet M (SD)", "randomforestregressor M (SD)", "t_val", "p_val", "p_val_fdr"]
    stat_order_compare_predictor_classes: ["Personal M (SD)", "Personal + X M (SD)", "t_val", "p_val", "p_val_fdr"]

    stat_mapping:
      t_val: "t"
      p_val: "p"
      p_val_fdr: "p (FDR-corrected)"
      "elasticnet M (SD)": "M (SD) ENR"
      "randomforestregressor M (SD)": "M (SD) RFR"

    compare_models: true
    compare_predictor_classes: true

    model_comparison_data:
      feature_combinations:
        - pl
        - srmc
        - sens
        - mac
        - pl_srmc
        - pl_sens
        - pl_srmc_sens
        - pl_mac
        - pl_srmc_mac
        - all_in
      samples_to_include:
        - all
        - selected
        - control
    predictor_class_comparison_data:
      feature_combinations:
        - pl
        - pl_srmc
        - pl_sens
        - pl_srmc_sens
        - pl_mac
        - pl_srmc_mac
      samples_to_include:
        - all
        - selected
        - control

  plots:  # TODO: Adhere to NHB Style
    store_plots: false
    plots:
      # - importance_plot  # not used right now
      - beeswarm_plot
    custom_cmap_colors:  # for a linear colormap, used e.g. in the beeswarm plots
      - "#5E9ACC"  # Blue
      - "#4F84B1"  # Deep blue
      - "#9DB9BF"  # Soft gray-blue
      - "#7DA5A9"  # Muted teal
      - "#B9D1B9"  # Light green
      - "#A3C7A1"  # Green
      - "#E3EEE5"  # Very pale green
      - "#CEE7CF"  # Light mint
    feature_combo_name_mapping:
      # Main analyses
      pl: "Personal"
      srmc: "Situational (ESM)"  # self-reported
      sens: "Situational (Sensing)"
      mac: "Societal" # "Macro-level"
      pl_srmc: "Personal + Situational (ESM)"
      pl_sens: "Personal + Situational (Sensing)"
      pl_srmc_sens: "Personal + Situational (ESM) + Situational (Sensing)"
      pl_mac: "Personal + Societal"
      pl_srmc_mac: "Personal + Situational (ESM) + Societal"
      all_in: "Personal + Situational (ESM) + Situational (Sensing) + Societal"
      mac_ia_values: "Societal - Interaction Values"
      srmc_ia_values: "Situational (ESM): Interaction Values"

      # Additional analyses
      pl_nnse: "Personal without neuroticism facets and self-esteem"
      pl_mac_nnse: "Personal + Societal without neuroticism facets and self-esteem"
      pl_srmc_nnse: "Personal + ESM without neuroticism facets and self-esteem"
      pl_srmc_control: "Personal + ESM only for CoCoMS samples that contain Sensing data"
      srmc_control: "ESM only for CoCoMS samples that contain Sensing data"

    cv_results_plot:
      crits: [ wb_state ]
      samples_to_include: [ combo ]  # combo
      metrics: [ pearson ]  # must be iterable
      models:
        - elasticnet
        - randomforestregressor
      figure_params:  # 18122024
        num_rows: 4
        num_cols: 3
        width: 20
        height: 10
        x_min: 0
        x_max: 0.70
        bar_width: 0.15
        title_pad: 30
        legend_pos: [0.955, 0.18]
        y_axis_x_pos: [0.09, 0.4073, 0.725]
        y_axis_y_pos: [[0.10, 0.908], [0.10, 0.908], [0.5202, 0.908]]
        title_pos: [0.365, 1]
        empty_cells:  # TODO: Add for SHAP beeswarm plot as well
          - [ 3, 2 ]
          - [ 2, 2 ]
        tight_layout: [0.02, 0.02, 0.98, 0.98]  # [0, 0.05, 1, 0.95]
      fontsizes:
        title: 22  # 20
        tick_params: 15  # 15
        legend: 15  # 15
        label: 15  # 15
      color_dct:  # only differ pl and the rest
        pl: "#5E9ACC"
        other: "#A3C7A1"
        #srmc: "#A3C7A1"
        #sens: "#A3C7A1"
        #mac: "#A3C7A1"
        bar_saturation:
          elasticnet: 0.7
          randomforestregressor: 1
      store_params:
        dpi: 450
        format: "png"
        name: "cv_results"
      col_assignment:
        first_col: ["pl", "srmc", "sens", "mac"]
        second_col: ["pl_srmc", "pl_sens", "pl_srmc_sens", "pl_mac"]
        third_col: ["pl_srmc_mac", "all_in"]
      titles:
        - "a) One-level predictions"  # "a) Within Predictor Levels"
        - "b) Two-level predictions" # "b) Across Two Predictor Levels"
        - "c) Three-level predictions" # "c) Across Three Predictor Levels"
      feature_combo_name_mapping:
        pl: "Personal; n = 9,118"
        srmc: "Situational (ESM); n = 9,118"
        sens: "Situational (Sensing); n = 1,338"
        mac: "Societal; n = 4,460"
        pl_srmc: "Personal + Situational (ESM); n = 10,015"
        pl_sens: "Personal + Situational (Sensing); n = 10,015"
        pl_srmc_sens: "Personal + Situational (ESM) + Situational (Sensing); n = 10,015"
        pl_mac: "Personal + Societal; n = 10,015"
        pl_srmc_mac: "Personal + Situational (ESM) + Societal; n = 10,015"
        all_in: "Personal + Situational (ESM) + Situational (Sensing) + Societal; n = 10,015"

    shap_beeswarm_plot:  # could define dpi, etc as well here

      prediction_model: [ randomforestregressor ]  # must be iterable
      crit: [wb_state]  # must be iterable
      samples_to_include: [selected]  # must be iterable
      num_to_display: 6
      shap_ia_values:
        add: true
        position: [3, 2]  # below the "all_in"
        feature_combination: srmc
        short_feature_names: False
        meta_stat_to_extract: "top_interactions"
        stat_to_extract: "top_abs_interactions"
        order_to_extract: 2
        num_to_extract: 6
        title_split_strng: ":"
        abbreviation: "IA"

      n_samples_mapping:
        pl: "n = 9,118"
        srmc: "n = 9,118"
        sens: "n = 1,338"
        mac: "n = 4,460"
        pl_srmc: "n = 9,118"
        pl_sens: "n = 1,338"
        pl_srmc_sens: "n = 751"
        pl_mac: "n = 4,460"
        pl_srmc_mac: "n = 4,460"
        all_in: "n = 10,015"
        srmc_ia_values: "n = 9,118"

      figure:  # Plot from 18122024
        num_rows: 4
        num_cols: 3
        width: 30
        height: 42
        fix_x_lim: true
        x_lim: [-0.8, 0.8]
        max_char_on_line_y_ticks: 25
      fontsizes:  # Plot from 18122024
        main_title: 28
        title: 26
        tick_params: 22
        x_label: 22
        y_label: 22
      subplot_adjustments:  # Plot from 18122024
        top: 0.92
        left: 0.17
        wspace: 1.25
        hspace: 0.6
        right: 0.94
      titles:
        shap_values:
          - "a) One-level predictions"
          - "b) Two-level predictions"
          - "c) Three-level predictions"
        shap_ia_values:
          - "d) Predictor interactions"
        line_dct:
          row_0: 4
          row_1: 5
          row_2: 4
          row_3: 3
        max_char_on_line: 26
        split_strng: "+"
      col_assignment:
        first_col: [ "pl", "srmc", "sens", "mac" ]
        second_col: [ "pl_srmc", "pl_sens", "pl_srmc_sens", "pl_mac" ]
        third_col: [ "pl_srmc_mac", "all_in" ]

    pred_true_parity_plot:
      figure:
        width: 8
        height: 8







